FROM node:20-alpine AS base
RUN corepack enable

FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy workspace configuration files
COPY package.json ./
COPY yarn.lock ./
COPY .yarnrc.yml ./
COPY turbo.json ./
COPY tooling ./tooling
COPY packages ./packages
COPY apps/admin/package.json ./apps/admin/package.json

RUN yarn install

FROM base AS builder
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy dependencies and source
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/package.json ./package.json
COPY --from=deps /app/yarn.lock ./yarn.lock
COPY --from=deps /app/.yarnrc.yml ./.yarnrc.yml
COPY --from=deps /app/turbo.json ./turbo.json
COPY --from=deps /app/tooling ./tooling
COPY --from=deps /app/packages ./packages
COPY --from=deps /app/apps/admin ./apps/admin
COPY apps/admin ./apps/admin

# # Copy environment variables for build (Clerk needs these during build)
COPY .env* ./

# Set build-time environment variables
ARG DATABASE_URL
ARG NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
ARG CLERK_SECRET_KEY
ARG CLERK_WEBHOOK_SECRET
ARG NEXT_PUBLIC_CLERK_SIGN_IN_URL
ARG NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL
ARG NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL
ARG GCP_PROJECT_ID
ARG GCP_CLIENT_EMAIL
ARG GCP_PRIVATE_KEY
ARG GCP_BUCKET_NAME
ARG GCS_VIDEO_PREFIX
ARG UPSTASH_REDIS_REST_URL
ARG UPSTASH_REDIS_REST_TOKEN
ARG AUTH_DISCORD_ID
ARG AUTH_DISCORD_SECRET
ARG AUTH_REDIRECT_PROXY_URL
ARG AUTH_SECRET
ARG AUTH_URL

ENV DATABASE_URL=$DATABASE_URL
ENV NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=$NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
ENV CLERK_SECRET_KEY=$CLERK_SECRET_KEY
ENV CLERK_WEBHOOK_SECRET=$CLERK_WEBHOOK_SECRET
ENV NEXT_PUBLIC_CLERK_SIGN_IN_URL=$NEXT_PUBLIC_CLERK_SIGN_IN_URL
ENV NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL=$NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL
ENV NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL=$NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL
ENV GCP_PROJECT_ID=$GCP_PROJECT_ID
ENV GCP_CLIENT_EMAIL=$GCP_CLIENT_EMAIL
ENV GCP_PRIVATE_KEY=$GCP_PRIVATE_KEY
ENV GCP_BUCKET_NAME=$GCP_BUCKET_NAME
ENV GCS_VIDEO_PREFIX=$GCS_VIDEO_PREFIX
ENV UPSTASH_REDIS_REST_URL=$UPSTASH_REDIS_REST_URL
ENV UPSTASH_REDIS_REST_TOKEN=$UPSTASH_REDIS_REST_TOKEN
ENV AUTH_DISCORD_ID=$AUTH_DISCORD_ID
ENV AUTH_DISCORD_SECRET=$AUTH_DISCORD_SECRET
ENV AUTH_REDIRECT_PROXY_URL=$AUTH_REDIRECT_PROXY_URL
ENV AUTH_SECRET=$AUTH_SECRET
ENV AUTH_URL=$AUTH_URL

RUN yarn turbo build --filter=admin...

FROM base AS runner
WORKDIR /app

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
USER nextjs

COPY --from=builder /app/apps/admin/next.config.js .
COPY --from=builder /app/apps/admin/package.json .

# Automatically leverage output traces to reduce image size
# https://nextjs.org/admin/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/apps/admin/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/apps/admin/.next/static ./apps/admin/.next/static
COPY --from=builder --chown=nextjs:nodejs /app/apps/admin/public ./apps/admin/public

# Copy environment variables to runtime
COPY --from=builder --chown=nextjs:nodejs /app/.env* ./

# Set environment variables for Next.js server
ENV PORT=8080
ENV HOSTNAME=0.0.0.0

EXPOSE 8080

CMD node apps/web/server.js
