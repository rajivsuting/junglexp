CREATE TABLE "cities" (
	"id" serial PRIMARY KEY NOT NULL,
	"state_id" integer,
	"name" text NOT NULL,
	"latitude" text,
	"longitude" text,
	"created_at" timestamp (0) DEFAULT now(),
	"updated_at" timestamp (0) DEFAULT now()
);
--> statement-breakpoint
CREATE TABLE "images" (
	"id" serial PRIMARY KEY NOT NULL,
	"small_url" text NOT NULL,
	"medium_url" text NOT NULL,
	"large_url" text NOT NULL,
	"original_url" text NOT NULL,
	"created_at" timestamp (0) DEFAULT now(),
	"updated_at" timestamp (0) DEFAULT now()
);
--> statement-breakpoint
CREATE TABLE "inclusions" (
	"id" serial PRIMARY KEY NOT NULL,
	"tour_id" integer NOT NULL,
	"is_included" boolean DEFAULT false NOT NULL,
	"name" text NOT NULL,
	"created_at" timestamp (0) DEFAULT now()
);
--> statement-breakpoint
CREATE TABLE "national_parks" (
	"id" serial PRIMARY KEY NOT NULL,
	"city_id" integer NOT NULL,
	"name" text NOT NULL,
	"slug" text NOT NULL,
	"created_at" timestamp (0) DEFAULT now(),
	"updated_at" timestamp (0) DEFAULT now(),
	CONSTRAINT "national_parks_slug_unique" UNIQUE("slug")
);
--> statement-breakpoint
CREATE TABLE "park_images" (
	"park_id" integer NOT NULL,
	"image_id" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE "souvenir_images" (
	"souvenir_id" integer NOT NULL,
	"image_id" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE "souvenirs" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" varchar(255) NOT NULL,
	"slug" text NOT NULL,
	"description" text NOT NULL,
	"price" integer NOT NULL,
	"park_id" integer,
	"is_available" boolean DEFAULT false NOT NULL,
	"created_at" timestamp (0) DEFAULT now(),
	"updated_at" timestamp (0) DEFAULT now(),
	CONSTRAINT "souvenirs_name_unique" UNIQUE("name"),
	CONSTRAINT "souvenirs_slug_unique" UNIQUE("slug")
);
--> statement-breakpoint
CREATE TABLE "states" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"state_code" text NOT NULL,
	"created_at" timestamp (0) DEFAULT now(),
	"updated_at" timestamp (0) DEFAULT now(),
	CONSTRAINT "states_name_unique" UNIQUE("name"),
	CONSTRAINT "states_state_code_unique" UNIQUE("state_code")
);
--> statement-breakpoint
CREATE TABLE "hotel_amenities" (
	"id" serial PRIMARY KEY NOT NULL,
	"hotel_id" integer NOT NULL,
	"amenity_id" integer
);
--> statement-breakpoint
CREATE TABLE "tour_hotels" (
	"id" serial PRIMARY KEY NOT NULL,
	"tour_id" integer NOT NULL,
	"hotel_name" text NOT NULL,
	"hotel_type" text NOT NULL,
	"hotel_address" text NOT NULL,
	"created_at" timestamp (0) DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "tour_images" (
	"tour_id" integer NOT NULL,
	"image_id" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE "tour_pricing" (
	"id" serial PRIMARY KEY NOT NULL,
	"tour_id" integer NOT NULL,
	"adult_price" integer NOT NULL,
	"child_price" integer,
	"infant_price" integer,
	"currency" varchar(6) DEFAULT 'INR' NOT NULL,
	"tax_included" boolean DEFAULT false NOT NULL,
	"created_at" timestamp (0) DEFAULT now() NOT NULL,
	"updated_at" timestamp (0) DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "tours" (
	"id" serial PRIMARY KEY NOT NULL,
	"title" text NOT NULL,
	"slug" text NOT NULL,
	"description" text NOT NULL,
	"park_id" integer NOT NULL,
	"pricing_id" integer NOT NULL,
	"created_at" timestamp (0) DEFAULT now() NOT NULL,
	"updated_at" timestamp (0) DEFAULT now() NOT NULL,
	CONSTRAINT "tours_slug_unique" UNIQUE("slug")
);
--> statement-breakpoint
CREATE TABLE "users" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "users_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"user_id" text NOT NULL,
	"email" varchar(255) NOT NULL,
	"phone" varchar(255),
	"first_name" varchar(225) NOT NULL,
	"last_name" varchar(225) NOT NULL,
	"role" integer DEFAULT 0 NOT NULL,
	"created_at" timestamp (0) DEFAULT now() NOT NULL,
	"updated_at" timestamp (0) DEFAULT now() NOT NULL,
	CONSTRAINT "users_user_id_unique" UNIQUE("user_id"),
	CONSTRAINT "users_email_unique" UNIQUE("email"),
	CONSTRAINT "users_phone_unique" UNIQUE("phone")
);
--> statement-breakpoint
ALTER TABLE "cities" ADD CONSTRAINT "cities_state_id_states_id_fk" FOREIGN KEY ("state_id") REFERENCES "public"."states"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "inclusions" ADD CONSTRAINT "inclusions_tour_id_tours_id_fk" FOREIGN KEY ("tour_id") REFERENCES "public"."tours"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "national_parks" ADD CONSTRAINT "national_parks_city_id_cities_id_fk" FOREIGN KEY ("city_id") REFERENCES "public"."cities"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "park_images" ADD CONSTRAINT "park_images_park_id_national_parks_id_fk" FOREIGN KEY ("park_id") REFERENCES "public"."national_parks"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "park_images" ADD CONSTRAINT "park_images_image_id_images_id_fk" FOREIGN KEY ("image_id") REFERENCES "public"."images"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "souvenir_images" ADD CONSTRAINT "souvenir_images_souvenir_id_souvenirs_id_fk" FOREIGN KEY ("souvenir_id") REFERENCES "public"."souvenirs"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "souvenir_images" ADD CONSTRAINT "souvenir_images_image_id_images_id_fk" FOREIGN KEY ("image_id") REFERENCES "public"."images"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "souvenirs" ADD CONSTRAINT "souvenirs_park_id_national_parks_id_fk" FOREIGN KEY ("park_id") REFERENCES "public"."national_parks"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_amenities" ADD CONSTRAINT "hotel_amenities_hotel_id_tour_hotels_id_fk" FOREIGN KEY ("hotel_id") REFERENCES "public"."tour_hotels"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "tour_hotels" ADD CONSTRAINT "tour_hotels_tour_id_tours_id_fk" FOREIGN KEY ("tour_id") REFERENCES "public"."tours"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "tour_images" ADD CONSTRAINT "tour_images_tour_id_tours_id_fk" FOREIGN KEY ("tour_id") REFERENCES "public"."tours"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "tour_images" ADD CONSTRAINT "tour_images_image_id_images_id_fk" FOREIGN KEY ("image_id") REFERENCES "public"."images"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "tours" ADD CONSTRAINT "tours_park_id_national_parks_id_fk" FOREIGN KEY ("park_id") REFERENCES "public"."national_parks"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "tours" ADD CONSTRAINT "tours_pricing_id_tour_pricing_id_fk" FOREIGN KEY ("pricing_id") REFERENCES "public"."tour_pricing"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "slug_idx" ON "national_parks" USING btree ("slug");--> statement-breakpoint
CREATE INDEX "name_idx" ON "national_parks" USING btree ("name");--> statement-breakpoint
CREATE INDEX "souvenirs_name_idx" ON "souvenirs" USING btree ("name");--> statement-breakpoint
CREATE INDEX "souvenirs_id_idx" ON "souvenirs" USING btree ("park_id");--> statement-breakpoint
CREATE INDEX "souvenirs_slug_idx" ON "souvenirs" USING btree ("slug");--> statement-breakpoint
CREATE INDEX "souvenirs_is_available_idx" ON "souvenirs" USING btree ("is_available");--> statement-breakpoint
CREATE INDEX "souvenirs_name_availability_idx" ON "souvenirs" USING btree ("name","is_available");--> statement-breakpoint
CREATE UNIQUE INDEX "user_id_unique" ON "users" USING btree ("user_id");