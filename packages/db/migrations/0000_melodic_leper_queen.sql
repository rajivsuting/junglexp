-- Current sql file was generated after introspecting the database
-- If you want to run this migration please uncomment this code before executing migrations
/*
CREATE TYPE "public"."hotel_booking_status" AS ENUM('pending', 'confirmed', 'cancelled');--> statement-breakpoint
CREATE TYPE "public"."hotel_status" AS ENUM('active', 'inactive');--> statement-breakpoint
CREATE TYPE "public"."hotel_type" AS ENUM('resort', 'forest', 'home');--> statement-breakpoint
CREATE TYPE "public"."meal_plan" AS ENUM('EP', 'CP', 'MAP', 'AP');--> statement-breakpoint
CREATE TYPE "public"."naturalist_booking_status" AS ENUM('pending', 'confirmed', 'cancelled');--> statement-breakpoint
CREATE TYPE "public"."policy_kind" AS ENUM('include', 'exclude');--> statement-breakpoint
CREATE TYPE "public"."user_roles" AS ENUM('user', 'admin', 'super_admin');--> statement-breakpoint
CREATE TABLE "room_images" (
	"id" serial PRIMARY KEY NOT NULL,
	"room_id" integer,
	"image_id" integer,
	"order" integer DEFAULT 0 NOT NULL
);
--> statement-breakpoint
CREATE TABLE "room_plans" (
	"id" serial PRIMARY KEY NOT NULL,
	"room_id" integer,
	"plan_type" "meal_plan" NOT NULL,
	"price" integer DEFAULT 0 NOT NULL,
	"description" text,
	"is_active" integer DEFAULT 1 NOT NULL
);
--> statement-breakpoint
CREATE TABLE "activity_amenities" (
	"id" serial PRIMARY KEY NOT NULL,
	"activity_id" integer,
	"amenity_id" integer,
	"order" integer DEFAULT 0 NOT NULL
);
--> statement-breakpoint
CREATE TABLE "souvenir_images" (
	"souvenir_id" integer NOT NULL,
	"image_id" integer NOT NULL,
	"id" serial PRIMARY KEY NOT NULL,
	"order" integer DEFAULT 0 NOT NULL
);
--> statement-breakpoint
CREATE TABLE "activities" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"description" text NOT NULL,
	"slug" text NOT NULL,
	"park_id" integer,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "souvenirs" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" varchar(255) NOT NULL,
	"slug" text NOT NULL,
	"description" text NOT NULL,
	"price" integer NOT NULL,
	"park_id" integer,
	"created_at" timestamp(0) DEFAULT now(),
	"updated_at" timestamp(0) DEFAULT now(),
	"quantity" integer DEFAULT 0 NOT NULL,
	CONSTRAINT "souvenirs_name_unique" UNIQUE("name"),
	CONSTRAINT "souvenirs_slug_unique" UNIQUE("slug")
);
--> statement-breakpoint
CREATE TABLE "promotions" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"link" text NOT NULL,
	"order" integer,
	"is_active" boolean DEFAULT true,
	"created_at" timestamp DEFAULT now(),
	"updated_at" timestamp DEFAULT now()
);
--> statement-breakpoint
CREATE TABLE "users" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "users_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"user_id" text NOT NULL,
	"email" varchar(255) NOT NULL,
	"phone" varchar(255),
	"first_name" varchar(225) NOT NULL,
	"last_name" varchar(225) NOT NULL,
	"created_at" timestamp(0) DEFAULT now() NOT NULL,
	"updated_at" timestamp(0) DEFAULT now() NOT NULL,
	"user_role" "user_roles" DEFAULT 'user' NOT NULL,
	CONSTRAINT "users_user_id_unique" UNIQUE("user_id"),
	CONSTRAINT "users_email_unique" UNIQUE("email"),
	CONSTRAINT "users_phone_unique" UNIQUE("phone")
);
--> statement-breakpoint
CREATE TABLE "hotels" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"description" text NOT NULL,
	"slug" text NOT NULL,
	"zone_id" integer,
	"hotel_type" "hotel_type" NOT NULL,
	"rating" integer DEFAULT 0,
	"location" geometry(Point) NOT NULL,
	"status" "hotel_status" DEFAULT 'active',
	"is_featured" boolean DEFAULT false
);
--> statement-breakpoint
CREATE TABLE "states" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"state_code" text NOT NULL,
	"created_at" timestamp(0) DEFAULT now(),
	"updated_at" timestamp(0) DEFAULT now(),
	CONSTRAINT "states_name_unique" UNIQUE("name"),
	CONSTRAINT "states_state_code_unique" UNIQUE("state_code")
);
--> statement-breakpoint
CREATE TABLE "cities" (
	"id" serial PRIMARY KEY NOT NULL,
	"state_id" integer,
	"name" text NOT NULL,
	"latitude" text,
	"longitude" text,
	"created_at" timestamp(0) DEFAULT now(),
	"updated_at" timestamp(0) DEFAULT now()
);
--> statement-breakpoint
CREATE TABLE "hotel_amenities" (
	"id" serial PRIMARY KEY NOT NULL,
	"hotel_id" integer,
	"amenity_id" integer,
	"order" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE "amenities" (
	"id" serial PRIMARY KEY NOT NULL,
	"label" text NOT NULL,
	"icon" text NOT NULL
);
--> statement-breakpoint
CREATE TABLE "faqs" (
	"id" serial PRIMARY KEY NOT NULL,
	"question" text NOT NULL,
	"answer" text NOT NULL
);
--> statement-breakpoint
CREATE TABLE "hotel_faqs" (
	"id" serial PRIMARY KEY NOT NULL,
	"faq_id" integer,
	"hotel_id" integer,
	"order" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE "hotel_images" (
	"id" serial PRIMARY KEY NOT NULL,
	"hotel_id" integer,
	"image_id" integer,
	"order" integer DEFAULT 0 NOT NULL
);
--> statement-breakpoint
CREATE TABLE "images" (
	"id" serial PRIMARY KEY NOT NULL,
	"small_url" text NOT NULL,
	"medium_url" text NOT NULL,
	"large_url" text NOT NULL,
	"original_url" text NOT NULL,
	"created_at" timestamp(0) DEFAULT now(),
	"alt_text" text DEFAULT '' NOT NULL,
	"updated_at" timestamp(0) DEFAULT now()
);
--> statement-breakpoint
CREATE TABLE "policies" (
	"id" serial PRIMARY KEY NOT NULL,
	"kind" "policy_kind" NOT NULL,
	"label" text NOT NULL
);
--> statement-breakpoint
CREATE TABLE "hotel_policies" (
	"id" serial PRIMARY KEY NOT NULL,
	"policy_id" integer,
	"hotel_id" integer,
	"order" integer DEFAULT 0 NOT NULL
);
--> statement-breakpoint
CREATE TABLE "safty_features" (
	"id" serial PRIMARY KEY NOT NULL,
	"label" text NOT NULL,
	"icon" text NOT NULL
);
--> statement-breakpoint
CREATE TABLE "hotel_safty_features" (
	"id" serial PRIMARY KEY NOT NULL,
	"safty_feature_id" integer,
	"hotel_id" integer,
	"order" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE "zones" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"description" text NOT NULL,
	"park_id" integer
);
--> statement-breakpoint
CREATE TABLE "national_parks" (
	"id" serial PRIMARY KEY NOT NULL,
	"city_id" integer NOT NULL,
	"name" text NOT NULL,
	"slug" text NOT NULL,
	"description" text NOT NULL,
	"created_at" timestamp(0) DEFAULT now(),
	"updated_at" timestamp(0) DEFAULT now(),
	CONSTRAINT "national_parks_slug_unique" UNIQUE("slug")
);
--> statement-breakpoint
CREATE TABLE "place_images" (
	"id" serial PRIMARY KEY NOT NULL,
	"place_id" integer,
	"image_id" integer,
	"order" integer DEFAULT 0 NOT NULL
);
--> statement-breakpoint
CREATE TABLE "rooms" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"description" text NOT NULL,
	"room_qty" integer DEFAULT 1 NOT NULL,
	"capacity" integer DEFAULT 2 NOT NULL,
	"hotel_id" integer
);
--> statement-breakpoint
CREATE TABLE "room_amenities" (
	"id" serial PRIMARY KEY NOT NULL,
	"room_id" integer,
	"amenity_id" integer,
	"order" integer DEFAULT 0 NOT NULL
);
--> statement-breakpoint
CREATE TABLE "places" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"description" text NOT NULL,
	"slug" text NOT NULL,
	"location" geometry(Point) NOT NULL,
	CONSTRAINT "places_slug_unique" UNIQUE("slug")
);
--> statement-breakpoint
CREATE TABLE "activity_images" (
	"id" serial PRIMARY KEY NOT NULL,
	"activity_id" integer,
	"image_id" integer,
	"order" integer DEFAULT 0 NOT NULL
);
--> statement-breakpoint
CREATE TABLE "activity_itinerary" (
	"id" serial PRIMARY KEY NOT NULL,
	"activity_id" integer,
	"title" text NOT NULL,
	"description" text NOT NULL,
	"order" integer DEFAULT 0 NOT NULL
);
--> statement-breakpoint
CREATE TABLE "park_images" (
	"id" serial PRIMARY KEY NOT NULL,
	"park_id" integer NOT NULL,
	"image_id" integer NOT NULL,
	"order" integer NOT NULL,
	"is_mobile" boolean DEFAULT false NOT NULL
);
--> statement-breakpoint
CREATE TABLE "activity_policies" (
	"id" serial PRIMARY KEY NOT NULL,
	"activity_id" integer,
	"policy_id" integer,
	"order" integer DEFAULT 0 NOT NULL
);
--> statement-breakpoint
CREATE TABLE "activity_packages" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"duration" double precision NOT NULL,
	"number" integer NOT NULL,
	"order" integer DEFAULT 0 NOT NULL,
	"active" boolean DEFAULT true NOT NULL,
	"activity_id" integer,
	"price" double precision NOT NULL,
	"price_1" double precision NOT NULL
);
--> statement-breakpoint
CREATE TABLE "naturalist" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"image_id" integer,
	"description" text NOT NULL,
	"park_id" integer
);
--> statement-breakpoint
CREATE TABLE "hotel_bookings" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"email" text NOT NULL,
	"mobile_no" varchar(255) NOT NULL,
	"check_in_date" date NOT NULL,
	"check_out_date" date NOT NULL,
	"no_of_rooms_required" integer NOT NULL,
	"no_of_adults" integer NOT NULL,
	"no_of_kids" integer NOT NULL,
	"status" "hotel_booking_status" DEFAULT 'pending' NOT NULL,
	"hotel_id" integer,
	"room_id" integer,
	"plan_id" integer
);
--> statement-breakpoint
CREATE TABLE "naturalist_bookings" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" text NOT NULL,
	"email" text NOT NULL,
	"mobile_no" text NOT NULL,
	"date_of_safari" date NOT NULL,
	"slot" text NOT NULL,
	"park_id" integer,
	"specialised_interest" text NOT NULL,
	"status" "naturalist_booking_status" DEFAULT 'pending' NOT NULL
);
--> statement-breakpoint
ALTER TABLE "room_images" ADD CONSTRAINT "room_images_room_id_rooms_id_fk" FOREIGN KEY ("room_id") REFERENCES "public"."rooms"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "room_images" ADD CONSTRAINT "room_images_image_id_images_id_fk" FOREIGN KEY ("image_id") REFERENCES "public"."images"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "room_plans" ADD CONSTRAINT "room_plans_room_id_rooms_id_fk" FOREIGN KEY ("room_id") REFERENCES "public"."rooms"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "activity_amenities" ADD CONSTRAINT "activity_amenities_activity_id_activities_id_fk" FOREIGN KEY ("activity_id") REFERENCES "public"."activities"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "activity_amenities" ADD CONSTRAINT "activity_amenities_amenity_id_amenities_id_fk" FOREIGN KEY ("amenity_id") REFERENCES "public"."amenities"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "souvenir_images" ADD CONSTRAINT "souvenir_images_souvenir_id_souvenirs_id_fk" FOREIGN KEY ("souvenir_id") REFERENCES "public"."souvenirs"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "souvenir_images" ADD CONSTRAINT "souvenir_images_image_id_images_id_fk" FOREIGN KEY ("image_id") REFERENCES "public"."images"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "activities" ADD CONSTRAINT "activities_park_id_national_parks_id_fk" FOREIGN KEY ("park_id") REFERENCES "public"."national_parks"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "souvenirs" ADD CONSTRAINT "souvenirs_park_id_national_parks_id_fk" FOREIGN KEY ("park_id") REFERENCES "public"."national_parks"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotels" ADD CONSTRAINT "hotels_zone_id_zones_id_fk" FOREIGN KEY ("zone_id") REFERENCES "public"."zones"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "cities" ADD CONSTRAINT "cities_state_id_states_id_fk" FOREIGN KEY ("state_id") REFERENCES "public"."states"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_amenities" ADD CONSTRAINT "hotel_amenities_hotel_id_hotels_id_fk" FOREIGN KEY ("hotel_id") REFERENCES "public"."hotels"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_amenities" ADD CONSTRAINT "hotel_amenities_amenity_id_amenities_id_fk" FOREIGN KEY ("amenity_id") REFERENCES "public"."amenities"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_faqs" ADD CONSTRAINT "hotel_faqs_faq_id_faqs_id_fk" FOREIGN KEY ("faq_id") REFERENCES "public"."faqs"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_faqs" ADD CONSTRAINT "hotel_faqs_hotel_id_hotels_id_fk" FOREIGN KEY ("hotel_id") REFERENCES "public"."hotels"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_images" ADD CONSTRAINT "hotel_images_hotel_id_hotels_id_fk" FOREIGN KEY ("hotel_id") REFERENCES "public"."hotels"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_images" ADD CONSTRAINT "hotel_images_image_id_images_id_fk" FOREIGN KEY ("image_id") REFERENCES "public"."images"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_policies" ADD CONSTRAINT "hotel_policies_policy_id_policies_id_fk" FOREIGN KEY ("policy_id") REFERENCES "public"."policies"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_policies" ADD CONSTRAINT "hotel_policies_hotel_id_hotels_id_fk" FOREIGN KEY ("hotel_id") REFERENCES "public"."hotels"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_safty_features" ADD CONSTRAINT "hotel_safty_features_safty_feature_id_safty_features_id_fk" FOREIGN KEY ("safty_feature_id") REFERENCES "public"."safty_features"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_safty_features" ADD CONSTRAINT "hotel_safty_features_hotel_id_hotels_id_fk" FOREIGN KEY ("hotel_id") REFERENCES "public"."hotels"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "zones" ADD CONSTRAINT "zones_park_id_national_parks_id_fk" FOREIGN KEY ("park_id") REFERENCES "public"."national_parks"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "national_parks" ADD CONSTRAINT "national_parks_city_id_cities_id_fk" FOREIGN KEY ("city_id") REFERENCES "public"."cities"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "place_images" ADD CONSTRAINT "place_images_place_id_places_id_fk" FOREIGN KEY ("place_id") REFERENCES "public"."places"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "place_images" ADD CONSTRAINT "place_images_image_id_images_id_fk" FOREIGN KEY ("image_id") REFERENCES "public"."images"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "rooms" ADD CONSTRAINT "rooms_hotel_id_hotels_id_fk" FOREIGN KEY ("hotel_id") REFERENCES "public"."hotels"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "room_amenities" ADD CONSTRAINT "room_amenities_room_id_rooms_id_fk" FOREIGN KEY ("room_id") REFERENCES "public"."rooms"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "room_amenities" ADD CONSTRAINT "room_amenities_amenity_id_amenities_id_fk" FOREIGN KEY ("amenity_id") REFERENCES "public"."amenities"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "activity_images" ADD CONSTRAINT "activity_images_activity_id_activities_id_fk" FOREIGN KEY ("activity_id") REFERENCES "public"."activities"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "activity_images" ADD CONSTRAINT "activity_images_image_id_images_id_fk" FOREIGN KEY ("image_id") REFERENCES "public"."images"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "activity_itinerary" ADD CONSTRAINT "activity_itinerary_activity_id_activities_id_fk" FOREIGN KEY ("activity_id") REFERENCES "public"."activities"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "park_images" ADD CONSTRAINT "park_images_park_id_national_parks_id_fk" FOREIGN KEY ("park_id") REFERENCES "public"."national_parks"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "park_images" ADD CONSTRAINT "park_images_image_id_images_id_fk" FOREIGN KEY ("image_id") REFERENCES "public"."images"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "activity_policies" ADD CONSTRAINT "activity_policies_activity_id_activities_id_fk" FOREIGN KEY ("activity_id") REFERENCES "public"."activities"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "activity_policies" ADD CONSTRAINT "activity_policies_policy_id_policies_id_fk" FOREIGN KEY ("policy_id") REFERENCES "public"."policies"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "activity_packages" ADD CONSTRAINT "activity_packages_activity_id_activities_id_fk" FOREIGN KEY ("activity_id") REFERENCES "public"."activities"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "naturalist" ADD CONSTRAINT "naturalist_image_id_images_id_fk" FOREIGN KEY ("image_id") REFERENCES "public"."images"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "naturalist" ADD CONSTRAINT "naturalist_park_id_national_parks_id_fk" FOREIGN KEY ("park_id") REFERENCES "public"."national_parks"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_bookings" ADD CONSTRAINT "hotel_bookings_plan_id_room_plans_id_fk" FOREIGN KEY ("plan_id") REFERENCES "public"."room_plans"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_bookings" ADD CONSTRAINT "hotel_bookings_hotel_id_hotels_id_fk" FOREIGN KEY ("hotel_id") REFERENCES "public"."hotels"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hotel_bookings" ADD CONSTRAINT "hotel_bookings_room_id_rooms_id_fk" FOREIGN KEY ("room_id") REFERENCES "public"."rooms"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "naturalist_bookings" ADD CONSTRAINT "naturalist_bookings_park_id_national_parks_id_fk" FOREIGN KEY ("park_id") REFERENCES "public"."national_parks"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "activities_name_idx" ON "activities" USING btree ("name" text_ops);--> statement-breakpoint
CREATE INDEX "activities_park_id_idx" ON "activities" USING btree ("park_id" int4_ops);--> statement-breakpoint
CREATE INDEX "activities_slug_idx" ON "activities" USING btree ("slug" text_ops);--> statement-breakpoint
CREATE INDEX "souvenirs_name_idx" ON "souvenirs" USING btree ("name" text_ops);--> statement-breakpoint
CREATE INDEX "souvenirs_park_id_idx" ON "souvenirs" USING btree ("park_id" int4_ops);--> statement-breakpoint
CREATE INDEX "souvenirs_slug_idx" ON "souvenirs" USING btree ("slug" text_ops);--> statement-breakpoint
CREATE UNIQUE INDEX "email_unique" ON "users" USING btree ("email" text_ops);--> statement-breakpoint
CREATE INDEX "phone_unique" ON "users" USING btree ("phone" text_ops);--> statement-breakpoint
CREATE INDEX "role_unique" ON "users" USING btree ("user_role" enum_ops);--> statement-breakpoint
CREATE UNIQUE INDEX "user_id_unique" ON "users" USING btree ("user_id" text_ops);--> statement-breakpoint
CREATE INDEX "hotels_hotel_type_idx" ON "hotels" USING btree ("hotel_type" enum_ops);--> statement-breakpoint
CREATE INDEX "hotels_hotel_type_rating_idx" ON "hotels" USING btree ("hotel_type" int4_ops,"rating" int4_ops);--> statement-breakpoint
CREATE INDEX "hotels_hotel_type_zone_id_idx" ON "hotels" USING btree ("hotel_type" enum_ops,"zone_id" int4_ops);--> statement-breakpoint
CREATE INDEX "hotels_hotels_status_hotel_type_idx" ON "hotels" USING btree ("status" enum_ops,"hotel_type" enum_ops);--> statement-breakpoint
CREATE INDEX "hotels_hotels_status_hotel_type_rating_idx" ON "hotels" USING btree ("status" enum_ops,"hotel_type" enum_ops,"rating" int4_ops);--> statement-breakpoint
CREATE INDEX "hotels_hotels_status_hotel_type_zone_id_idx" ON "hotels" USING btree ("status" enum_ops,"hotel_type" int4_ops,"zone_id" enum_ops);--> statement-breakpoint
CREATE INDEX "hotels_hotels_status_hotel_type_zone_id_rating_idx" ON "hotels" USING btree ("status" int4_ops,"hotel_type" int4_ops,"zone_id" enum_ops,"rating" int4_ops);--> statement-breakpoint
CREATE INDEX "hotels_hotels_status_is_featured_hotel_type_zone_id_rating_idx" ON "hotels" USING btree ("status" enum_ops,"is_featured" enum_ops,"hotel_type" int4_ops,"zone_id" int4_ops,"rating" bool_ops);--> statement-breakpoint
CREATE INDEX "hotels_is_featured_hotel_type_idx" ON "hotels" USING btree ("is_featured" enum_ops,"hotel_type" enum_ops);--> statement-breakpoint
CREATE INDEX "hotels_is_featured_hotel_type_rating_idx" ON "hotels" USING btree ("is_featured" bool_ops,"hotel_type" enum_ops,"rating" int4_ops);--> statement-breakpoint
CREATE INDEX "hotels_is_featured_hotel_type_zone_id_idx" ON "hotels" USING btree ("is_featured" int4_ops,"hotel_type" bool_ops,"zone_id" bool_ops);--> statement-breakpoint
CREATE INDEX "hotels_is_featured_hotel_type_zone_id_rating_idx" ON "hotels" USING btree ("is_featured" enum_ops,"hotel_type" int4_ops,"zone_id" bool_ops,"rating" bool_ops);--> statement-breakpoint
CREATE INDEX "hotels_is_featured_idx" ON "hotels" USING btree ("is_featured" bool_ops);--> statement-breakpoint
CREATE INDEX "hotels_location_idx" ON "hotels" USING btree ("location" btree_geometry_ops);--> statement-breakpoint
CREATE INDEX "hotels_name_idx" ON "hotels" USING btree ("name" text_ops);--> statement-breakpoint
CREATE INDEX "hotels_rating_idx" ON "hotels" USING btree ("rating" int4_ops);--> statement-breakpoint
CREATE INDEX "hotels_slug_idx" ON "hotels" USING btree ("slug" text_ops);--> statement-breakpoint
CREATE INDEX "hotels_status_idx" ON "hotels" USING btree ("status" enum_ops);--> statement-breakpoint
CREATE INDEX "hotels_zone_id_idx" ON "hotels" USING btree ("zone_id" int4_ops);--> statement-breakpoint
CREATE INDEX "cities_state_id_idx" ON "cities" USING btree ("state_id" int4_ops);--> statement-breakpoint
CREATE INDEX "hotel_policies_kind_idx" ON "policies" USING btree ("kind" enum_ops);--> statement-breakpoint
CREATE INDEX "hotel_policies_label_idx" ON "policies" USING btree ("label" text_ops);--> statement-breakpoint
CREATE INDEX "national_parks_name_idx" ON "national_parks" USING btree ("name" text_ops);--> statement-breakpoint
CREATE INDEX "national_parks_slug_idx" ON "national_parks" USING btree ("slug" text_ops);--> statement-breakpoint
CREATE INDEX "places_location_idx" ON "places" USING btree ("location" btree_geometry_ops);--> statement-breakpoint
CREATE INDEX "places_name_idx" ON "places" USING btree ("name" text_ops);--> statement-breakpoint
CREATE INDEX "places_slug_idx" ON "places" USING btree ("slug" text_ops);--> statement-breakpoint
CREATE INDEX "naturalist_name_index" ON "naturalist" USING btree ("name" text_ops);--> statement-breakpoint
CREATE INDEX "naturalist_park_id_index" ON "naturalist" USING btree ("park_id" int4_ops);--> statement-breakpoint
CREATE INDEX "naturalist_park_id_name_index" ON "naturalist" USING btree ("park_id" int4_ops,"name" text_ops);--> statement-breakpoint
CREATE INDEX "hotel_bookings_check_in_date_idx" ON "hotel_bookings" USING btree ("check_in_date" date_ops);--> statement-breakpoint
CREATE INDEX "hotel_bookings_check_out_date_idx" ON "hotel_bookings" USING btree ("check_out_date" date_ops);--> statement-breakpoint
CREATE INDEX "hotel_bookings_hotel_id_idx" ON "hotel_bookings" USING btree ("hotel_id" int4_ops);--> statement-breakpoint
CREATE INDEX "hotel_bookings_no_of_adults_idx" ON "hotel_bookings" USING btree ("no_of_adults" int4_ops);--> statement-breakpoint
CREATE INDEX "hotel_bookings_no_of_kids_idx" ON "hotel_bookings" USING btree ("no_of_kids" int4_ops);--> statement-breakpoint
CREATE INDEX "hotel_bookings_no_of_rooms_required_idx" ON "hotel_bookings" USING btree ("no_of_rooms_required" int4_ops);--> statement-breakpoint
CREATE INDEX "hotel_bookings_no_of_rooms_required_no_of_adults_no_of_kids_idx" ON "hotel_bookings" USING btree ("no_of_rooms_required" int4_ops,"no_of_adults" int4_ops,"no_of_kids" int4_ops);--> statement-breakpoint
CREATE INDEX "hotel_bookings_room_id_idx" ON "hotel_bookings" USING btree ("room_id" int4_ops);--> statement-breakpoint
CREATE INDEX "hotel_bookings_status_hotel_id_name_email_mobile_no_idx" ON "hotel_bookings" USING btree ("status" text_ops,"hotel_id" enum_ops,"name" int4_ops,"email" int4_ops,"mobile_no" int4_ops);--> statement-breakpoint
CREATE INDEX "hotel_bookings_status_idx" ON "hotel_bookings" USING btree ("status" enum_ops);--> statement-breakpoint
CREATE INDEX "hotel_bookings_status_room_id_name_email_mobile_no_idx" ON "hotel_bookings" USING btree ("status" int4_ops,"room_id" enum_ops,"name" enum_ops,"email" text_ops,"mobile_no" int4_ops);--> statement-breakpoint
CREATE INDEX "naturalist_bookings_name_email_mobile_no_idx" ON "naturalist_bookings" USING btree ("name" text_ops,"email" text_ops,"mobile_no" text_ops);--> statement-breakpoint
CREATE INDEX "naturalist_bookings_park_id_date_of_safari_idx" ON "naturalist_bookings" USING btree ("park_id" date_ops,"date_of_safari" int4_ops);--> statement-breakpoint
CREATE INDEX "naturalist_bookings_park_id_idx" ON "naturalist_bookings" USING btree ("park_id" int4_ops);--> statement-breakpoint
CREATE INDEX "naturalist_bookings_slot_idx" ON "naturalist_bookings" USING btree ("slot" text_ops);--> statement-breakpoint
CREATE INDEX "naturalist_bookings_specialised_interest_idx" ON "naturalist_bookings" USING btree ("specialised_interest" text_ops);--> statement-breakpoint
CREATE INDEX "naturalist_bookings_status_idx" ON "naturalist_bookings" USING btree ("status" enum_ops);--> statement-breakpoint
CREATE INDEX "naturalist_bookings_status_name_email_mobile_no_idx" ON "naturalist_bookings" USING btree ("status" enum_ops,"name" enum_ops,"email" text_ops,"mobile_no" text_ops);
*/